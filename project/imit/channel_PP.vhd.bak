--- Company: 
-- Engineer: 
-- 
-- Create Date:    10:36:14 07/05/2019 
-- Design Name: 
-- Module Name:    channel_c - Behavioral 
-- Project Name: 
-- Target Devices: 
-- Tool versions: 
-- Description: 
--
-- Dependencies: 
--
-- Revision: 
-- Revision 0.01 - File Created
-- Additional Comments: 
--
----------------------------------------------------------------------------------
library ieee;
	use ieee.numeric_std.all;
	use ieee.std_logic_1164.all;
	use ieee.math_real.all; 

library elementary;
	use elementary.s274types_pkg.all;
	use elementary.utility.all;
	use elementary.all;


library ieee_proposed;
	use ieee_proposed.fixed_pkg.all;

-- Uncomment the following library declaration if using
-- arithmetic functions with Signed or Unsigned values
--use IEEE.NUMERIC_STD.ALL;

-- Uncomment the following library declaration if instantiating
-- any Xilinx primitives in this code.
--library UNISIM;
--use UNISIM.VComponents.all;

entity channel_PP is
generic(

		int : integer := 11;
		fract : integer := -15;
		data_width: integer := 14;
		data_level: integer := 6;
		data_pft: integer := 6;
		data_rom: integer := 14;
		data_distance : integer := 13;
		data_ppz : integer := 5;
		pft_widht : integer:= 8;
		pft_code : int_array := (0, 4, 6, 10, 12, 14, 21, 23, 25, 27);
		length_array: int_array :=  (4195, 1959, 2439, 3359, 5607, 7719, 1633, 2113, 2563, 3043 ); 
      Delay_pp : integer := 8719
	);
	
	Port(
		Clk_96 : in std_logic;

		Ce_F6 : in std_logic;
		
		UPP : in std_logic_vector (data_level-1 downto 0);
		
		PFT : in std_logic_vector (data_pft-1 downto 0);
		
		Sign_LCHM : in std_logic;
		
		fdev : in std_logic_vector (2 downto 0);
		
		fdop : in std_logic_vector (7 downto 0);
		
		DC1 : in std_logic_vector (data_distance downto 1);
		
		OD : in std_logic;
		
		PIPP_is : in std_logic;
		
		ppz_m : in std_logic_vector (4 downto 0);
		
		--dpp1 : in integer;

		-- ----
		LG : in std_logic;
		TI : in std_logic;
		KD : in std_logic;
		upp_cos_sfix : out sfixed(int - 1 downto fract);
		PP : out std_logic_vector (data_rom-1 downto 0)
		
		);		
end channel_PP;

architecture Behavioral of channel_PP is

	Signal UMP_r, UC1_r,UC2_r, UAP_r, UPP_r : sfixed(int - 1 downto fract):=(others => '0');
	Signal UPP_r1 : std_logic_vector (data_level downto 0):=(others => '0');
	Signal PP_cos,PP_ram : std_logic_vector (data_rom-1 downto 0):=(others => '0');
	Signal UPP_cos :  std_logic_vector (data_rom-1 downto 0):=(others => '0');
	Signal UPP2_cos :  std_logic_vector (data_rom-1 downto 0):=(others => '0');
	Signal EN_DNP1 , EN_DNP_AP, nakl, EN_DNP2 : std_logic := '0';
	Signal UPP_cos_sfixed : sfixed(int - 1 downto fract) := (others => '0');
	constant phasa : real := ieee.math_real.math_pi;
	constant	dopler: real := 0.000207;
	
	--attribute keep : string;
	--attribute keep of UPP_cos_sfixed : signal is "true";
	--attribute keep of EN_DNP1 : signal is "true";
	--attribute keep of EN_DNP2 : signal is "true";

begin
-------------------------------------------
  process (PIPP_is)
		begin
			if  PIPP_is= '1'  then
				nakl <= not Sign_LCHM;
				
			else
				nakl <=  Sign_LCHM;
				
			end if;
		end process;
		--------------------------------------------
--MUX_signal_type_PP: entity work.MUX_signal_type_PP
--		generic map( 
--			data_ppz => data_ppz,
--			data_pft => data_pft,
--			data_rom => data_rom
--		)
--
--		port map ( 
--			Clk_96 => Clk_96,
--			Ce_F6 => '1',
--			PFT => PFT,--in
--			nakl => Sign_LCHM,
--			--P2 => P2,
--			--NT_PPZ => NT_PPZ, --in
--			Sign_LCHM => Sign_LCHM, --in
--			EN =>EN_DNP1,--in
--			Rom_cos => PP_cos--out			
--		 );
		 
	--  MUX_signal_type_C: entity work.mux_pp
		MUX_signal_type_PP: entity work.MUX_signal_type_PP
		generic map( 
					data_ppz => data_ppz,
					data_pft => data_pft,
					--phasa => phasa,
			      --dopler => dopler,
					data_rom => data_rom
					)

		port map ( 
					Clk_96 => Clk_96,
					Ce_F6 => '1',
					OD => OD ,
					LG => LG , 
					TI => TI,
					PFT => PFT,
					fdev => fdev,
					--dpp1 => dpp1,
					fdop => fdop,--in
					PIPP => PIPP_is,
					--P2 => P2,
					ppz_m => ppz_m, --in
					Sign_LCHM => nakl, --in
					--Sign_LCHM => Sign_LCHM,
					EN =>EN_DNP1,--in
					Rom_cos =>PP_cos--out			
					 );
		--INV_L60_PP: entity work.INV_L60_PP
		-- port map ( 
		--			Clk_96 => Clk_96,
		--			Ce_F6 => '1',
		--			--PFT => "100",--PFT_PP,--in
		--			--P1 => '0',--P1_PP,
		--			--P2 => '0',--P2_PP,
		--			--NT_PPZ => "00000",  --NT_PPZ, --in
		--			Sign_LCHM => Sign_LCHM, --not_Sign_LCHM,
		--			EN => EN_PP_DPP,
		--			Rom_cos => PP_cos--out
		--				 );
		-------------------------------- 
		--not_Sign_LCHM <= not(Sign_LCHM);

	--------------------------------   ( -> )
	UPP_r1 <= '0' & UPP;
	--Amplitude_signal_PP: entity work.Amplitude_signal1
	Amplitude_signal_PP: entity work.Amplitude_signal_ap

		generic map( 
			int => int,
			data_level => data_level +1,
			ap => false,
			fract => fract
		)
		port map ( 
			Clk_96 => Clk_96,
			Ce_F6 => '1',
			U => UPP_r1,--in
			U_r => UPP_r 	--out		
		);
	------------------------------------------------------
	------------------------------  ()

	MULT_UPP: entity elementary.sfixed_mult
		generic map( 
			int => int,
			fract=>fract,
			data_width=>data_width
		)
		port map (
			R => '0',
			Clk => Clk_96,
--			Ce_F6 => '1',
			K_mult => UPP_r,
			D_mult => PP_cos, --in
			--D_mult =>  PP_ram, --in
			Q_mult => UPP_cos,
			Q_mult_sfixed => UPP_cos_sfixed			--out
		);
	------------------------------------------------------
	-------------------------  (..  50)
	--Distance_PP: entity work.Distance2
	Distance_PP: entity work.Distance_pp
		generic map( 
			data_distance => data_distance,
			pft_widht => pft_widht,
			pft_code => pft_code,
			data_pft => data_pft				
		)
		port map ( 
			Clk_96 => Clk_96,
			Ce_F6 => '1',
			PI => PIPP_is,--in
			dpp1 => dpp1,
			D => DC1 ,--in
			PFT => PFT, --in
			--OD => OD,--in
			OD => LG,--in
			--EN_Signal_D2 => EN_DNP2,
			EN_Signal_D => EN_DNP1--out
		);
	----------------------------------------------------------
--	Distance_PP2: entity work.Distance_pp3
--		generic map( 
--			data_distance => data_distance,
--			pft_widht => pft_widht,
--			pft_code => pft_code,
--			data_pft => data_pft				
--		)
--		port map ( 
--			Clk_96 => Clk_96,
--			Ce_F6 => '1',
--			PI => PIPP_is,--in
--			--P2 => P2,
--			D => DC1 ,--in
--			PFT => PFT, --in
--			OD => OD,--in
--			--EN_Signal_D2 => EN_DNP2,
--			EN_Signal_D => EN_DNP2--out
--		);
	
	----------------------------------------------------------
--  MUX_signal_type_PP: entity work.ram_pp
--
--		generic map( 
--					--data_ppz => data_ppz,
--					--data_pft => data_pft,
--					--del => del ,
--					delay  => Delay_pp ,
--					DATA_WIDTH => data_rom
--					)
--
--		port map ( 
--					Clock => Clk_96,
--					--Ce_F6 => '1',
--					PIPP => PIPP_is ,
--					readEn => EN_DNP1,
--					readEn2 => EN_DNP2,
--					WriteEn =>  PIPP_is ,    
--					Reset => '0',
--					Enable => '1',
--					DataIn => PP_cos,
--					DataOut => PP_ram--out			
--					 );	
	---------------------------------------------
		process (clk_96) is
	begin
		if rising_edge(clk_96) then
			pp <=  UPP_cos ;
		
			upp_cos_sfix <=  UPP_cos_sfixed;-- to_sfixed(PP_cos, int - 1, fract);
		end if;
	end process;

end Behavioral;

